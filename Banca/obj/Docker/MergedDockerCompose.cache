name: dockercompose6328689493017511131
services:
  bancaapi:
    build:
      context: C:\Users\amegna\source\repos\BancaApi\Banca
      dockerfile: BancaApi/Dockerfile
    container_name: banca_api
    depends_on:
      cache:
        condition: service_started
        required: true
      dbsql:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
      MYSQL_DB: ' Banca'
      MYSQL_HOST: ' db_banca'
      MYSQL_PASSWORD: ' Password12345'
      MYSQL_USER: ' sa'
    hostname: Kafka
    image: bancaapi
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      host_ip: 127.0.0.1
      target: 80
      published: "8002"
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    restart: always
    volumes:
    - type: bind
      source: C:\Users\amegna\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\amegna\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
  cache:
    container_name: redis_image
    image: redis:7.2.1
    networks:
      default: null
    ports:
    - mode: ingress
      target: 6379
      published: "6379"
      protocol: tcp
    restart: always
  dbsql:
    container_name: db_banca
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: Password12345
      MYSQL_DATABASE: Banca
      hostname: db_banca
    image: mcr.microsoft.com/mssql/server:2022-latest
    networks:
      default: null
    ports:
    - mode: ingress
      target: 1433
      published: "1434"
      protocol: tcp
    restart: always
    volumes:
    - type: volume
      source: dbdata
      target: /var/opt/mssql
      volume: {}
  kafka:
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_CREATE_TOPICS: simpletalk_topic:1:1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    image: wurstmeister/kafka
    networks:
      default: null
    ports:
    - mode: ingress
      target: 9092
      published: "9092"
      protocol: tcp
    volumes:
    - type: bind
      source: /var/run/docker.sock
      target: /var/run/docker.sock
      bind:
        create_host_path: true
  zookeeper:
    image: wurstmeister/zookeeper
    networks:
      default: null
    ports:
    - mode: ingress
      target: 2181
      published: "2181"
      protocol: tcp
networks:
  default:
    name: dockercompose6328689493017511131_default
volumes:
  dbdata:
    name: dockercompose6328689493017511131_dbdata